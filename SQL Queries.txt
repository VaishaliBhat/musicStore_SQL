--1. Who is the senior most employee based on job title?

select * from employee order by levels desc limit 1


--2. Which countries have the most Invoices?

select count(*),billing_country from invoice
group by billing_country
order by count(*) desc

--3. What are top 3 values of total invoice?

select total from invoice 
order by total desc
limit 3;

-- 4. Which city has the best customers? We would like to throw a promotional Music 
-- Festival in the city we made the most money. Write a query that returns one city that 
-- has the highest sum of invoice totals. Return both the city name & sum of all invoice 
-- totals

select sum(total) as total_invoice,billing_city from invoice 
group by billing_city
order by total_invoice desc

-- 5. Who is the best customer? The customer who has spent the most money will be 
-- declared the best customer. Write a query that returns the person who has spent the 
-- most money

select  customer.customer_id,customer.first_name,customer.last_name,sum(invoice.total) as total
from customer 
inner join invoice on invoice.customer_id = customer.customer_id
group by customer.customer_id
order by total desc
limit 1


-- 6. Write query to return the email, first name, last name, & Genre of all Rock Music 
-- listeners. Return your list ordered alphabetically by email starting with A

select email,first_name,last_name
from customer c
inner join invoice i on i.customer_id=c.customer_id
inner join invoice_line il on il.invoice_id = i.invoice_id
inner join track t on t.track_id=il.invoice_line_id
where il.track_id in (
	select track_id from genre g 
	inner join track t on t.genre_id=g.genre_id
	where g.name like 'Rock'
)
order by email;


-- 7. Let's invite the artists who have written the most rock music in our dataset. Write a 
-- query that returns the Artist name and total track count of the top 10 rock bands

select a.name, count(t.track_id) as Count_of_track
from artist a
inner join album al on a.artist_id = al.artist_id
inner join track t on t.album_id=al.album_id
where t.track_id in (
	select t.track_id from genre g
	join track t on t.genre_id = g.genre_id
	where g.name like 'Rock'
)
group by a.name
order by Count_of_track desc
limit 10



-- 8. Return all the track names that have a song length longer than the average song length. 
-- Return the Name and Milliseconds for each track. Order by the song length with the 
-- longest songs listed first

select name,milliseconds
from track
where milliseconds > (select avg(milliseconds) from track)
order by milliseconds desc


-- 1. Find how much amount spent by each customer on artists? Write a query to return
-- customer name, artist name and total spent


with best_selling_artist as(
select a.artist_id,a.name,sum(il.unit_price*il.quantity) as totalAmtSpent
from invoice_line il 
 join track t on t.track_id=il.track_id
 join album al on t.album_id = al.album_id
 join artist a on a.artist_id = al.artist_id
group by 1
order by 3 desc
limit 1
)
select c.customer_id,c.first_name,c.last_name,bsa.name,sum(il.unit_price*il.quantity) as AmtSpent
from invoice i 
join customer c on c.customer_id = i.customer_id
join invoice_line il on il.invoice_id = i.invoice_id
join track t on t.track_id = il.track_id
join album al on al.album_id = t.album_id 
join best_selling_artist bsa on bsa.artist_id = al.artist_id
group by 1,2,3,4
order by 5 desc




-- 2. We want to find out the most popular music Genre for each country. We determine the 
-- most popular genre as the genre with the highest amount of purchases. Write a query 
-- that returns each country along with the top Genre. For countries where the maximum 
-- number of purchases is shared return all Genres


with popular_genre as(
	select count(il.quantity) as totalPurchased,c.country,g.name,g.genre_id,
row_number() over (partition by c.country order by count(il.quantity) desc ) as rowNo
from invoice i
inner join invoice_line il on il.invoice_id = i.invoice_id
inner join customer c on c.customer_id = i.customer_id
inner join track t on t.track_id=il.track_id
inner join genre g on g.genre_id = t.genre_id
group by 2,3,4
order by 2 asc, 1 desc	
					  )
select popular_genre.country,popular_genre.name,popular_genre.totalPurchased,popular_genre.genre_id from popular_genre where rowNo <=1


-- 3. Write a query that determines the customer that has spent the most on music for each 
-- country. Write a query that returns the country along with the top customer and how
-- much they spent. For countries where the top amount spent is shared, provide all 
-- customers who spent this amount

with recursive
customerBycountry as(

	select i.billing_country,c.customer_id,c.first_name,c.last_name, sum(total) as totalspent
	from invoice i 
	inner join customer c on c.customer_id = i.customer_id
	group by 1,2,3,4
	order by 5 desc
),
maxSpentByCustomer as (
	select max(totalspent) as maxAmtSpent,billing_country
	from customerBycountry 
	group by 2
)
select cc.billing_country,cc.first_name,cc.last_name,mc.maxAmtSpent
from 
customerBycountry cc
inner join maxSpentByCustomer mc on cc.billing_country = mc.billing_country
where cc.totalspent = mc.maxAmtSpent
order by 1